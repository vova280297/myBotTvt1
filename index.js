const TelegramApi = require('node-telegram-bot-api')
const fs = require('fs');
// const {gameOptions, againOptions} = require('./options')
// const sequelize = require('./db');
// const UserModel = require('./models');

const token = '5958688549:AAEdBQUROMEqFINzZEk_qL1KYl23JNvnadg'

const bot = new TelegramApi(token, {polling: true})

// const chats = {}


const startGame = async (chatId) => {
    await bot.sendMessage('Hello World');
    // const randomNumber = Math.floor(Math.random() * 10)
    // chats[chatId] = randomNumber;
    // await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π', gameOptions);
}

const start = async () => {

    // try {
    //     await sequelize.authenticate()
    //     await sequelize.sync()
    // } catch (e) {
    //     console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥ —Å–ª–æ–º–∞–ª–æ—Å—å', e)
    // }

    bot.setMyCommands([
        {command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
        // {command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ'},
        // {command: '/game', description: '–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π —Ü–∏—Ñ—Ä—É'},
    ])


    bot.on('text', async msg => {

    try {

        if(msg.text == '/start') {

            await bot.sendMessage(msg.chat.id, `–≤–∞—à –∞–π–¥–∏ ${msg.chat.id}`);

        }
        // else {

        //     await bot.sendMessage('353313805', msg.text);

        // }

    }
    catch(error) {

        console.log(error);

    }

})


// bot.on('photo', async img => {

//     try {

//         // const photoGroup = [];

//         // for(let index = 0; index < img.photo.length; index++) {

//             // const photoPath = await img.photo[0].file_id;

//             // photoGroup.push({

//                 // type: 'photo',
//                 // media: photoPath,
//                 // caption: `dasds`

//             // })

//         // }
//         // const a = await JSON.stringify({
//         //         type: 'photo',
//         //         media: photoPath,
//         //         caption: `${img.photo.caption}`
//         // })

//         // await bot.sendMediaGroup(img.chat.id, a);
//         await bot.sendMessage(img.chat.id, 'Photo');

//         // for(let index = 0; index < photoGroup.length; index++) {

//         //     fs.unlink(photoGroup[index].media, error => {

//         //         if(error) {

//         //             console.log(error);

//         //         }

//         //     })

//         // }

//     }
//     catch(error) {

//         console.log(error);

//     }

// })

// bot.on("video", async video => {

//     try {

//         // const thumbPath = await bot.downloadFile(video.video.thumbnail.file_id, './image');

//         await bot.sendMediaGroup(video.chat.id, [
            
//             JSON.stringify( {

//                 type: 'video',
//                 media: video.video.file_id,
//                 caption: `${video.video.caption}`

//             })]);
//             await bot.sendMessage(img.chat.id, JSON.stringify( {

//                 type: 'video',
//                 media: video.video.file_id,
//                 caption: `${video.video.caption}`

//             }));
//         // fs.unlink(thumbPath, error => {

//         //     if(error) {

//         //         console.log(error);

//         //     }

//         // })

//     }
//     catch(error) {

//         console.log(error);

//     }

// })

//     bot.on('message', async msg => {
//         const text = msg.text;
//         const photo = msg.photo;
//         const caption = msg.caption;
//         const video = msg.video;
//         const chatId = msg.chat.id;
//         try {
//              if (text === '/start') {
//                 // const user = await UserModel.findOne({chatId})
//                 bot.sendMessage(chatId,
// `–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ü–æ–∑–¥—Ä–∞–≤—å—Ç–µ –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ —Å–æ –≤—Å–µ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏!üéâ
// –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ 
// 1)–ò–º—è —Ñ–∞–º–∏–ª–∏—é
// 2)–í–∞—à –≥–æ—Ä–æ–¥
// 3)–í–∞—à–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ`) 
                
                
//             }else{
//                 // await bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ! –°–∞–º—ã–µ —è—Ä–∫–∏–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å–º–æ—Ç—Ä–∏—Ç–µ 23 –∏—é–Ω—è –≤ –≤–µ—á–µ—Ä–Ω–µ–º —ç—Ñ–∏—Ä–µ —Ç–µ–ª–µ–∫–∞–Ω–∞–ª–∞ "–ë–µ–ª–∞—Ä—É—Å—å 2". –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏, –±—É–¥–µ—Ç –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!üòâ`);
//                 // await bot.sendMessage('353313805', `${text}`)
//                 // await bot.sendPhoto('353313805', `${photo[0].file_id}`)
//                 bot.sendMessage('353313805', `${caption}`)

//                 if(text!==undefined){
//                     await bot.sendMessage('353313805', `${text}`)
//                 }
//                  if(photo!==undefined){
//                     await bot.sendMessage('353313805', `${text}`)
//                 }
              
//             }
//                 // await UserModel.create({chatId})
//                 // await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/ea5/382/ea53826d-c192-376a-b766-e5abc535f1c9/7.webp')
              
           
//         } catch (e) {
//             return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–æ—á–∫–∞!)');
//         }


//         // try {
//         //     if (text === '/start') {
//         //         // await UserModel.create({chatId})
//         //         // await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/ea5/382/ea53826d-c192-376a-b766-e5abc535f1c9/7.webp')
//         //         return bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∞–≤—Ç–æ—Ä–∞ —é—Ç—É–± –∫–∞–Ω–∞–ª–∞ ULBI TV`);
//         //     }
//         //     if (text === '/info') {
//         //         // const user = await UserModel.findOne({chatId})
//         //         return bot.sendMessage(chatId, `–¢–µ–±—è –∑–æ–≤—É—Ç ${msg.from.id} ${msg.from.last_name}`) 
                
                
//         //     }
            
//         //     return bot.sendMessage(chatId, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!)');
//         // } catch (e) {
//         //     return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–æ—á–∫–∞!)');
//         // }

//     })

//     // bot.on('callback_query', async msg => {
//     //     const data = msg.data;
//     //     const chatId = msg.message.chat.id;
//     //     if (data === '/again') {
//     //         return startGame(chatId)
//     //     }
//     //     const user = await UserModel.findOne({chatId})
//     //     if (data == chats[chatId]) {
//     //         user.right += 1;
//     //         await bot.sendMessage(chatId, `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –æ—Ç–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}`, againOptions);
//     //     } else {
//     //         user.wrong += 1;
//     //         await bot.sendMessage(chatId, `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª, –±–æ—Ç –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}`, againOptions);
//     //     }
//     //     await user.save();
//     // })
}

start()
